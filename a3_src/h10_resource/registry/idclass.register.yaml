title:
  "Identifier Class Register."


introduction:
  "Various classes of identifier string are registered in this document.
  Identifier strings enable the identities and relationships between entities
  to be recorded or inferred via string matching. This simple implementation
  technique provides a flexible capability upon which numerous automated
  engineering processes may be built."

register:
  process_area:
    desc: "Build process area identifier."
    pfix: "a"
    dgts: 1
    note: "Different areas of the repository are given over to different
          stages of the build process. This makes it easier to check
          that the process is being followed correctly, e.g. by setting
          appropriate read/write flags."

  branch:
    desc: "Branch or clone category id."
    pfix: "b"
    dgts: 1
    note: "The flow of development bifuricates into branches for many reasons,
          each with different life cycle. For example, feature branches will be
          short lived, rapidly integrating back into mainline development,
          whereas post-release maintenance branches may never be reintegrated.
          We group branches into broad categories so that our scripts can
          identify and manage the lifecycle in an appropriate manner."

  counterparty:
    desc: "Counterparty identifier."
    pfix: "c"
    dgts: 3
    note: "Obfuscated unique identifier for clients, suppliers and
          project partners, enabling us to refer to clients from
          within source documents without breaching expectations of
          confidentiality."

  design_element:
    desc: "Discipline identifier."
    pfix: "d"
    dgts: 5
    note: "Systems development involves the coordination of work from
          multiple distinct disciplines."

  environment:
    desc: "Runtime, build or development environment identifier."
    pfix: "e"
    dgts: 2
    note: "This identifier is used to uniquely identify different
          runtime environment configurations for build host and
          build target. THe main identifier identifies architecture
          and OS only. More detailed dependencies are captured as
          different configurations of the main identifer."

  framework:
    desc: "Software framework identifier."
    pfix: "f"
    dgts: 2
    note: "This identifier is used to uniquely identify different
          modelling and software runtime frameworks for which
          integration is required. (MATLAB, Simulink, LabView etc...)"

  ref_ctrl:
    desc: "Reference control hierarchy tier identifier."
    pfix: "h"
    dgts: 2
    note: "We use an explicit hierarchy to reduce the formation of
           cyclic dependencies and to encourage product line oriented
           organisation."

  item:
    desc: "Item identifier."
    pfix: "i"
    dgts: 5
    note: "Items are generic identifiers that can be used for any
          thing that needs to be tracked. These are currently most
          heavily used for requirements items."

  job:
    desc: "Job or task identifier."
    pfix: "j"
    dgts: 7
    note: "We use jobs rather than tickets because t is used for team member."

  protection_level:
    desc: "Protection level identifier."
    pfix: "k"
    dgts: 2
    note: "The letter k is short for klassification."

  project:
    desc: "Project identifier."
    pfix: "p"
    dgts: 4
    note: "Projects are numbered and named in a global namespace."

  validation_level:
    desc: "Document data validation level identifier."
    pfix: "v"
    dgts: 2
    note: "Documents can declare the stringency of their own validation."

  team_member:
    desc: "Team member identifier."
    pfix: "t"
    dgts: 3
    note: "I prefer calling people team members rather than users."

  machine:
    desc: "Machine identifier."
    pfix: "z"
    dgts: 4
    note: "The prefix z is short for zoo."
