{

    "title":        "System dependencies register.",

    "introduction": "The dependencies register helps to control and manage third party dependencies.",

    "register": {

        "alabaster": {
            "desc":         "A configurable sidebar-enabled Sphinx theme.",
            "notes":        "Required by simpy; invoke",
            "dirname":      "alabaster",
            "policy":       "ver_0.7.7",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/bitprophet/alabaster.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "astroid": {
            "desc":         "Enhanced AST for pylint and other projects.",
            "notes":        "Required by PyLint, also used for other Python AST static analysis.",
            "dirname":      "astroid",
            "policy":       "ver_ce89669",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/PyCQA/astroid.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "babel": {
            "desc":         "Internationalisation and localisation utilities.",
            "notes":        "Required by sphinx.",
            "dirname":      "babel",
            "policy":       "ver_2.2.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/python-babel/babel.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "baron": {
            "desc":         "Full Syntax Tree for python to make writing refactoring code a realist task.",
            "notes":        "Required by redbaron, used for python static analysis and refactoring.",
            "dirname":      "baron",
            "policy":       "ver_0.6.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/PyCQA/baron.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "bashplotlib": {
            "desc":         "Plotting in the terminal.",
            "notes":        "Used to plot stuff in the terminal.",
            "dirname":      "bashplotlib",
            "policy":       "ver_4646264",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/glamp/bashplotlib.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "boltons": {
            "desc":         "A set of pure-Python utilities.",
            "notes":        "A rather useful library used for a variety of different tasks.",
            "dirname":      "boltons",
            "policy":       "ver_15.1.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/mahmoud/boltons.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "bottle": {
            "desc":         "A fast and simple micro-framework for python web applications.",
            "notes":        "Used to serve documentation, test results and reports.",
            "dirname":      "bottle",
            "policy":       "ver_0.12.9",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/bottlepy/bottle.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        },

        "bunch": {
            "desc":         "A Python dict providing attribute-style access.",
            "notes":        "Used to make config object access more legible.",
            "dirname":      "bunch",
            "policy":       "ver_0170145",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/dsc/bunch.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "click": {
            "desc":         "Python composeable command line utility.",
            "notes":        "Used to parse command line args for da.",
            "dirname":      "click",
            "policy":       "ver_6.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/mitsuhiko/click.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "cloudpickle": {
            "desc":         "Extended pickling support for Python objects.",
            "notes":        "Required by SpaCy natural language processing lib.",
            "dirname":      "cloudpickle",
            "policy":       "ver_v0.1.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/cloudpipe/cloudpickle.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "cmake": {
            "desc":         "A cross platform open source build system generator.",
            "notes":        "Required to build LAPACK for NumPy.",
            "dirname":      "cmake",
            "policy":       "ver_v3.6.1",
            "iface":        ["cli"],
            "path": {
                "cli":      "bin"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://cmake.org/cmake.git"
            },
            "build": {
                "method":   "manual",
                "tool":     "make"
            }
        },

        "colorama": {
            "desc":         "Simple cross-platform colored terminal text.",
            "notes":        "Required by radon. Used to display cyclomatic complexity measures.",
            "dirname":      "colorama",
            "policy":       "ver_0.3.6",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/tartley/colorama.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "cookiecutter": {
            "desc":         "A command-line utility that creates projects from templates.",
            "notes":        "Used to quickly create projects for counterparties.",
            "dirname":      "cookiecutter",
            "policy":       "ver_1.4.0",
            "iface":        ["cli",
                             "lib_python2",
                             "lib_python3"],
            "path": {
                "cli":          "lib/python3",
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/audreyr/cookiecutter.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "coverage": {
            "desc":         "Code coverage testing for Python.",
            "notes":        "Used to calculate test coverage metrics.",
            "dirname":      "coverage",
            "policy":       "ver_aaf74da",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/nedbat/coveragepy.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "cymem": {
            "desc":         "Manage calls to calloc/free through Cython.",
            "notes":        "Required by SpaCy natural language processing lib.",
            "dirname":      "cymem",
            "policy":       "ver_99f32b8",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/MaxJust/cymem.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        },

        "cython": {
            "desc":         "A Python to C Compiler.",
            "notes":        "Used to improve Python model runtime performance.",
            "dirname":      "cython",
            "policy":       "ver_0.23.4",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/cython/cython.git"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "docutils": {
            "desc":         "Tools for processing plaintext documentation to HTML.",
            "notes":        "Required by Sphinx.",
            "dirname":      "docutils",
            "policy":       "ver_0.12",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/docutils-mirror/docutils.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        },

        "figleaf": {
            "desc":         "A code coverage recording and analysis package for Python.",
            "notes":        "Used to calculate test coverage metrics.",
            "dirname":      "figleaf",
            "policy":       "ver_37cc03a",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/ctb/figleaf"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "fuzzywuzzy": {
            "desc":         "A python module to perform fuzzy string matching.",
            "notes":        "Used by the QMS to find build configuration files given partially matching query strings.",
            "dirname":      "fuzzywuzzy",
            "policy":       "ver_0.5.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/seatgeek/fuzzywuzzy.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "gitdb": {
            "desc":         "Python module to perform IO on git-style object databases.",
            "notes":        "A gitpython dependency.",
            "dirname":      "gitdb",
            "policy":       "ver_0.6.4",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/gitpython-developers/gitdb.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        },

        "gitpython": {
            "desc":         "Python module to interact with Git repositories.",
            "notes":        "Used to interface with source document repositories.",
            "dirname":      "gitpython",
            "policy":       "ver_1.0.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/gitpython-developers/GitPython.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "h5py": {
            "desc":         "A Pythonic interface to the HDF5 binary data format.",
            "notes":        "Used to read segmentations done by ilastik.",
            "dirname":      "h5py",
            "policy":       "ver_2.6.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/h5py/h5py.git"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "html5lib_python": {
            "desc":         "HTML parser based on the WHATWG HTML specification.",
            "notes":        "Used as part of the engineering document compilation pipeline.",
            "dirname":      "html5lib_python",
            "policy":       "ver_1.0b10",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/html5lib/html5lib-python.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "hyperopt": {
            "desc":         "Distributed Asynchronous Hyperparameter Optimization in Python.",
            "notes":        "Used to perform hyperparameter optimization.",
            "dirname":      "hyperopt",
            "policy":       "ver_ad2a1a3",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/hyperopt/hyperopt.git"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "hypothesis": {
            "desc":         "Hypothesis is an advanced Quickcheck style testing library for Python.",
            "notes":        "Used to generate test cases based on assertions.",
            "dirname":      "hypothesis",
            "policy":       "ver_3.4.2",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/DRMacIver/hypothesis.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "jdcal": {
            "desc":         "A library to handle Julian dates stored as two numbers.",
            "notes":        "Required by openpyxl for generating Excel format reports.",
            "dirname":      "jdcal",
            "policy":       "ver_v1.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/phn/jdcal.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        },

        "jinja2": {
            "desc":         "Jinja2 is a template engine written in pure Python.",
            "notes":        "Used to produce HTML.",
            "dirname":      "jinja2",
            "policy":       "ver_2.8",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/mitsuhiko/jinja2.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "lazy_object_proxy": {
            "desc":         "A fast and thorough lazy object proxy.",
            "notes":        "Required by astroid and PyLint. Used for static analysis using the Python AST.",
            "dirname":      "lazy_object_proxy",
            "policy":       "ver_v1.2.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/ionelmc/python-lazy-object-proxy.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "libxml2": {
            "desc":         "The XML C parser and toolkit of Gnome",
            "notes":        "Required by lxml. Used to generate reports and documentation.",
            "dirname":      "libxml2",
            "policy":       "ver_v2.9.4",
            "iface":        ["cli",
                             "include",
                             "lib_native"],
            "path": {
                "cli":         "bin",
                "include":     "include/libxml2",
                "lib_native":  "lib"
            },
            "config": {
                "method":   "manual",
                "tool":     "ftp",
                "url":      "ftp://xmlsoft.org/libxml2/"
            },
            "build": {
                "method":   "manual",
                "tool":     "make"
            }
        },

        "lxml": {
            "desc":         "The lxml XML toolkit for Python.",
            "notes":        "Used to generate reports and documentation. Needs libxml2",
            "dirname":      "lxml",
            "policy":       "ver_lxml-3.6.0",
            "iface":        ["lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/lxml/lxml.git"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "mando": {
            "desc":         "Create Python CLI apps with little to no effort at all.",
            "notes":        "Required by radon. Used to measure cyclomatic complexity.",
            "dirname":      "mando",
            "policy":       "ver_v0.3.2",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/rubik/mando.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "markupsafe": {
            "desc":         "Implements a unicode subclass that supports HTML strings.",
            "notes":        "Required by Jinja2.",
            "dirname":      "markupsafe",
            "policy":       "ver_0.23",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/mitsuhiko/markupsafe.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "mccabe": {
            "desc":         "McCabe complexity checker for Python.",
            "notes":        "Used to measure cyclomatic complexity.",
            "dirname":      "mccabe",
            "policy":       "ver_0.3.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/PyCQA/mccabe.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "metaopt": {
            "desc":         "MetaOpt optimizes black-box functions in parallel.",
            "notes":        "Used for hyperparameter tuning.",
            "dirname":      "metaopt",
            "policy":       "ver_v0.1.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/cigroup-ol/metaopt.git"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "murmurhash": {
            "desc":         "Cython bindings for MurmurHash2.",
            "notes":        "Required by SpaCy natural language processing lib.",
            "dirname":      "murmurhash",
            "policy":       "ver_0.26.4",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/spacy-io/murmurhash.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "mypy": {
            "desc":         "McCabe complexity checker for Python.",
            "notes":        "Used to measure cyclomatic complexity.",
            "dirname":      "mypy",
            "policy":       "ver_v0.2.0",
            "iface":        ["lib_python3"],
            "path": {
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/JukkaL/mypy.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        },

        "networkx": {
            "desc":         "A Python package for studying complex networks.",
            "notes":        "Used to analyse networks.",
            "dirname":      "networkx",
            "policy":       "ver_networkx-1.11",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/networkx/networkx.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "nltk": {
            "desc":         "Python Natural Language Toolkit.",
            "notes":        "Used to measure readability.",
            "dirname":      "nltk",
            "policy":       "ver_3.2.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/nltk/nltk.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "numpy": {
            "desc":         "Python array processing.",
            "notes":        "Required by many of our scientific computing dependencies.",
            "dirname":      "numpy",
            "policy":       "ver_v1.11.0b2",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/numpy/numpy.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        },

        "openpyxl": {
            "desc":         "A Python library to read and write Excel 2007 files.",
            "notes":        "Used for generating reports.",
            "dirname":      "openpyxl",
            "policy":       "ver_2.2.6",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "manual",
                "tool":     "hg",
                "url":      "https://bitbucket.org/openpyxl/openpyxl"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "optunity": {
            "desc":         "Optimization routines for hyperparameter tuning.",
            "notes":        "Used for hyperparameter tuning.",
            "dirname":      "optunity",
            "policy":       "ver_1.1.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/claesenm/optunity.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pathlib": {
            "desc":         "Object oriented filesystem paths.",
            "notes":        "Required by SpaCy natural language processing lib.",
            "dirname":      "pathlib",
            "policy":       "ver_1.0.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "manual",
                "tool":     "hg",
                "url":      "https://bitbucket.org/pitrou/pathlib"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        },

        "pep8": {
            "desc":         "Simple python style checker.",
            "notes":        "Used for style-checking Python language source documents.",
            "dirname":      "pep8",
            "policy":       "ver_1.7.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/PyCQA/pep8.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pep257": {
            "desc":         "A static analysis tool for checking docstring style.",
            "notes":        "Used for style-checking Python language source documents.",
            "dirname":      "pep257",
            "policy":       "ver_0.7.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/GreenSteam/pep257.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pillow": {
            "desc":         "The friendly PIL fork.",
            "notes":        "Used for image processing in Python.",
            "dirname":      "pillow",
            "policy":       "ver_3.1.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/python-pillow/Pillow.git"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "pip": {
            "desc":         "The PyPA recommended tool for installing Python packages.",
            "notes":        "Required by metaopt setup script to parse requirements files.",
            "dirname":      "pip",
            "policy":       "ver_8.0.3",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/pypa/pip.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "plac": {
            "desc":         "The smartest command line arguments parser in the world.",
            "notes":        "Required by SpaCy natural language processing lib.",
            "dirname":      "plac",
            "policy":       "ver_b9dde47",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/micheles/plac.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pluggy": {
            "desc":         "Plugin management and hook calling for Python.",
            "notes":        "Required by PyTest.",
            "dirname":      "pluggy",
            "policy":       "ver_0.3.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/hpk42/pluggy.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "preshed": {
            "desc":         "Cython hash table for pre-hashed keys.",
            "notes":        "Required by SpaCy natural language processing lib.",
            "dirname":      "preshed",
            "policy":       "ver_0.46.4",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/spacy-io/preshed.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pudb": {
            "desc":         "A console-based visual debugger for Python.",
            "notes":        "Used for debugging.",
            "dirname":      "pudb",
            "policy":       "ver_v2015.4.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/inducer/pudb.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "py": {
            "desc":         "The py lib is a Python development support library.",
            "notes":        "Used by py.test to support unit testing.",
            "dirname":      "py",
            "policy":       "ver_1.4.31",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "manual",
                "tool":     "hg",
                "url":      "https://bitbucket.org/pytest-dev/py"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "py_gfm": {
            "desc":         "An implementation of Github-Flavored Markdown.",
            "notes":        "Used to generate reports and documentation.",
            "dirname":      "py_gfm",
            "policy":       "ver_0.1.2",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/Zopieux/py-gfm.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "py_good": {
            "desc":         "Slim yet handsome validation library.",
            "notes":        "Used to verify design data and metadata against defined schema.",
            "dirname":      "py_good",
            "policy":       "ver_v0.0.7",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/kolypto/py-good.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pycallgraph": {
            "desc":         "Create call graphs for Python programs.",
            "notes":        "Used to generate call graphs to help navigate and visualise program structure.",
            "dirname":      "pycallgraph",
            "policy":       "ver_6c0f0e1",
            "iface":        ["cli",
                             "lib_python2",
                             "lib_python3"],
            "path": {
                "cli":          "lib/python3/pycallgraph",
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/gak/pycallgraph.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pycco": {
            "desc":         "Literate-style documentation generator.",
            "notes":        "Intended to help generate documentation.",
            "dirname":      "pycco",
            "policy":       "ver_0.4",
            "iface":        ["lib_python2",
                             "lib_python3",
                             "cli"],
            "path": {
                "cli":          "lib/python3/pycco",
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/pycco-docs/pycco.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pycodestyle": {
            "desc":         "Python style guide checker.",
            "notes":        "Formerly called pep8. Used for static analysis of design documents written in Python.",
            "dirname":      "pycodestyle",
            "policy":       "ver_2.0.0",
            "iface":        ["lib_python2",
                             "lib_python3",
                             "cli"],
            "path": {
                "cli":          "lib/python3/pycodestyle",
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/PyCQA/pycodestyle.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pydocstyle": {
            "desc":         "Python docstring style checker.",
            "notes":        "Formerly called pep256. Used for static analysis of design documents written in Python.",
            "dirname":      "pydocstyle",
            "policy":       "ver_1.0.0",
            "iface":        ["lib_python2",
                             "lib_python3",
                             "cli"],
            "path": {
                "cli":          "lib/python3/pydocstyle",
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/PyCQA/pydocstyle.github"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pygments": {
            "desc":         "Pygments is a syntax highlighting package written in Python.",
            "notes":        "Required by pudb. Used for debugging.",
            "dirname":      "pygments",
            "policy":       "ver_2.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "manual",
                "tool":     "hg",
                "url":      "https://bitbucket.org/birkenfeld/pygments-main"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pylint": {
            "desc":         "A Python static analysis and testing tool.",
            "notes":        "Used for static analysis and testing of design documents written in the Python language.",
            "dirname":      "pylint",
            "policy":       "ver_pylint-1.5.6",
            "iface":        ["cli",
                             "lib_python2",
                             "lib_python3"],
            "path": {
                "cli":          "lib/python3",
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/PyCQA/pylint.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pymongo": {
            "desc":         "The Python driver for MongoDB.",
            "notes":        "Used by hyperopt for inter process communication.",
            "dirname":      "pymongo",
            "policy":       "ver_3.2.2",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/mongodb/mongo-python-driver.git"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "pymutester": {
            "desc":         "A tool to facilitate mutation testing in Python.",
            "notes":        "Used to check sufficiency of test coverage.",
            "dirname":      "pymutester",
            "policy":       "ver_rel-0-1-0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/PyCQA/pylint.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pyrun2": {
            "desc":         "A portable fork of cpython 2.7.",
            "notes":        "Used to ensure consistent behaviour in the build.",
            "dirname":      "pyrun",
            "policy":       "ver_2.2.0_py2.7",
            "iface":        ["cli",
                             "include",
                             "lib_python2"],
            "path": {
                "cli":          "bin",
                "include":      "include/python2.7",
                "lib_python2":  "lib/python2/lib-dynload"
            },
            "config": {
                "method":   "manual",
                "tool":     "manual",
                "url":      "https://www.egenix.com/"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "pyrun3": {
            "desc":         "A portable fork of cpython 3.5.",
            "notes":        "Used to ensure consistent behaviour in the build.",
            "dirname":      "pyrun",
            "policy":       "ver_2.2.0_py3.5",
            "iface":        ["cli",
                             "include",
                             "lib_python3"],
            "path": {
                "cli":          "bin",
                "include":      "include/python2.7",
                "lib_python3":  "lib/python3/lib-dynload"
            },
            "config": {
                "method":   "manual",
                "tool":     "manual",
                "url":      "https://www.egenix.com/"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "pyservice": {
            "desc":         "A simple library to make services on python more easily.",
            "notes":        "Intended to be used for build progress monitoring daemons.",
            "dirname":      "pyservice",
            "policy":       "ver_v0.4.3.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/ownport/pyservice.git"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "pystache": {
            "desc":         "Mustache in Python.",
            "notes":        "Required by pycco. Used to generate HTML documentation.",
            "dirname":      "pystache",
            "policy":       "ver_c4ce6cd",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/defunkt/pystache.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pytest": {
            "desc":         "A powerful and elegant python test framework.",
            "notes":        "Intended to be used to run unit tests.",
            "dirname":      "pytest",
            "policy":       "ver_2.9.1",
            "iface":        ["cli",
                             "lib_python2",
                             "lib_python3"],
            "path": {
                "cli":          "lib/python3",
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/pytest-dev/pytest.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pytest_bdd": {
            "desc":         "BDD library for the py.test runner.",
            "notes":        "Intended to be used to run BDD style unit tests.",
            "dirname":      "pytest_bdd",
            "policy":       "ver_2.16.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/pytest-dev/pytest-bdd.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pytest_cov": {
            "desc":         "Coverage plugin for pytest.",
            "notes":        "Intended to be used to check test coverage levels.",
            "dirname":      "pytest_cov",
            "policy":       "ver_v2.2.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/pytest-dev/pytest-cov.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "pytest_json": {
            "desc":         "Generate json reports from pytest runs.",
            "notes":        "Intended to be used to help report test results.",
            "dirname":      "pytest_json",
            "policy":       "ver_0.4.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/mattcl/pytest-json.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "python_docx": {
            "desc":         "Create and modify Word documents with Python.",
            "notes":        "Used to generate reports and documentation.",
            "dirname":      "python_docx",
            "policy":       "ver_v0.8.6",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/python-openxml/python-docx.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "python_docx_template": {
            "desc":         "Use a docx as a jinja2 template.",
            "notes":        "Used to generate reports and documentation.",
            "dirname":      "python_docx_template",
            "policy":       "ver_v0.2.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/elapouya/python-docx-template.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "python_markdown": {
            "desc":         "Python implementation of Markdown.",
            "notes":        "Used to generate reports and documentation.",
            "dirname":      "python_markdown",
            "policy":       "ver_2.6.6-final",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/waylan/Python-Markdown.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        },

        "radon": {
            "desc":         "Various code metrics for Python code.",
            "notes":        "Intended to be used to measure cyclomatic complexity and other metrics.",
            "dirname":      "radon",
            "policy":       "ver_v1.2.2",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/rubik/radon.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "redbaron": {
            "desc":         "Abstraction on top of baron, a FST for python to make writing refactoring code a realistic task.",
            "notes":        "Used for python refactoring and code generation.",
            "dirname":      "redbaron",
            "policy":       "ver_0.6.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/PyCQA/redbaron.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "requests": {
            "desc":         "A Python package for studying complex networks.",
            "notes":        "Used to analyse networks.",
            "dirname":      "requests",
            "policy":       "ver_v2.9.1",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/kennethreitz/requests.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "robotframework": {
            "desc":         "A test automation framework.",
            "notes":        "Used for Acceptance Test Driven Development.",
            "dirname":      "robotframework",
            "policy":       "ver_3.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/robotframework/robotframework.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "ruamel_yaml": {
            "desc":         "A YAML parser and emitter that supports roundtrip conversion.",
            "notes":        "Used to obtain line numbers for tracing the origin of embedded YAML metadata.",
            "dirname":      "ruamel_yaml",
            "policy":       "ver_e0e79cf39edf",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "manual",
                "tool":     "hg",
                "url":      "https://bitbucket.org/ruamel/yaml"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "semver": {
            "desc":         "A python module for semantic versioning.",
            "notes":        "Required by SpaCy natural language processing lib.",
            "dirname":      "semver",
            "policy":       "ver_2.6.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/k-bx/python-semver.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "simpy": {
            "desc":         "Discrete event simulation for Python.",
            "notes":        "A framework for MIL and SIL simulations.",
            "dirname":      "simpy",
            "policy":       "ver_3.0.8",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "manual",
                "tool":     "hg",
                "url":      "https://bitbucket.org/simpy/simpy"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "six": {
            "desc":         "Six is a Python 2 and 3 compatibility library.",
            "notes":        "Required by PyLint. Used to run static testing.",
            "dirname":      "six",
            "policy":       "ver_1.10.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "manual",
                "tool":     "hg",
                "url":      "https://bitbucket.org/gutworth/six"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "setuptools": {
            "desc":         "Extensions to the distutils for large or complex distributions.",
            "notes":        "Many of our python library dependencies require setuptools to build.",
            "dirname":      "setuptools",
            "policy":       "ver_18.5",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "manual",
                "tool":     "hg",
                "url":      "https://bitbucket.org/pypa/setuptools"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "smmap": {
            "desc":         "A sliding memory map manager.",
            "notes":        "Required by gitpython. Used to interface with source document repositories.",
            "dirname":      "smmap",
            "policy":       "ver_v0.9.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/gitpython-developers/smmap.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "snowballstemmer": {
            "desc":         "Snowball stemming library collection for Python.",
            "notes":        "Required by Sphinx.",
            "dirname":      "snowballstemmer",
            "policy":       "ver_f7fb6af",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/shibukawa/snowball_py"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "spacy": {
            "desc":         "Industrial-strength NLP.",
            "notes":        "Used to improve the quality of requirements.",
            "dirname":      "spacy",
            "policy":       "ver_0.101.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/spacy-io/spaCy.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "spearmint": {
            "desc":         "Spearmint Bayesian optimization.",
            "notes":        "Used for hyperparameter tuning.",
            "dirname":      "spearmint",
            "policy":       "ver_eccccac",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/HIPS/Spearmint.git"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "sphinx": {
            "desc":         "The sphinx documentation generator.",
            "notes":        "Required to build documentation for many dependencies.",
            "dirname":      "sphinx",
            "policy":       "ver_1.3.5",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/sphinx-doc/sphinx.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "sputnik": {
            "desc":         "Extended pickling support for Python objects.",
            "notes":        "Required by SpaCy natural language processing lib.",
            "dirname":      "sputnik",
            "policy":       "ver_0.9.3",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/spacy-io/sputnik.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "sqlitedict": {
            "desc":         "A persistent dict, backed-up by SQLite and pickle.",
            "notes":        "Required by openmdao.",
            "dirname":      "sqlitedict",
            "policy":       "ver_v1.2.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/piskvorky/sqlitedict.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        },

        "subl": {
            "desc":         "Sublime Text - A text editor that can be automated using Python.",
            "notes":        "Used for general purpose text editing.",
            "dirname":      "subl",
            "policy":       "ver_3118",
            "iface":        ["cli"],
            "path": {
                "cli":      "sublime_text"
            },
            "config": {
                "method":   "manual",
                "tool":     "manual",
                "url":      "http://www.sublimetext.com/"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "tblib": {
            "desc":         "Traceback fiddling library. Allows you to pickle tracebacks.",
            "notes":        "Used so we can throw exceptions across process boundaries.",
            "dirname":      "tblib",
            "policy":       "ver_v1.3.0",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/ionelmc/python-tblib.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "thinc": {
            "desc":         "Learn super-sparse multi-class models in Cython.",
            "notes":        "Required by SpaCy natural language processing lib.",
            "dirname":      "thinc",
            "policy":       "ver_5.0.8",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/spacy-io/thinc.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "ultrajson": {
            "desc":         "Ultra fast JSON encoder and decoder for Python.",
            "notes":        "Required by SpaCy natural language processing lib.",
            "dirname":      "ultrajson",
            "policy":       "ver_v1.35",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/esnme/ultrajson.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "urwid": {
            "desc":         "Console user interface library for Python.",
            "notes":        "Required by pudb. Used for debugging.",
            "dirname":      "urwid",
            "policy":       "ver_86eb5fc",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/urwid/urwid.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "voluptuous": {
            "desc":         "A Python data validation library.",
            "notes":        "Used to verify design data and metadata against defined schema.",
            "dirname":      "voluptuous",
            "policy":       "ver_0.8.11",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/alecthomas/voluptuous.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_setuptools"
            }
        },

        "wrapt": {
            "desc":         "A Python module for decorators, wrappers and monkey patching.",
            "notes":        "Used by astroid, which is used by PyLint.",
            "dirname":      "wrapt",
            "policy":       "ver_1.10.6",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/GrahamDumpleton/wrapt.git"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        },

        "xenon": {
            "desc":         "Monitoring tool based on radon.",
            "notes":        "Intended for use in checking complexity metrics.",
            "dirname":      "xenon",
            "policy":       "ver_v0.3.3",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/rubik/xenon.git"
            },
            "build": {
                "method":   "manual",
                "tool":     "python_setuptools"
            }
        },

        "yaml": {
            "desc":         "The next generation YAML parser and emitter for Python.",
            "notes":        "Used to read and write YAML format configuration files. Currently built without support for libyaml",
            "dirname":      "yaml",
            "policy":       "ver_3.10",
            "iface":        ["lib_python2",
                             "lib_python3"],
            "path": {
                "lib_python2":  "lib/python2",
                "lib_python3":  "lib/python3"
            },
            "config": {
                "method":   "automatic",
                "tool":     "git",
                "url":      "https://github.com/yaml/pyyaml"
            },
            "build": {
                "method":   "automatic",
                "tool":     "python_distutils"
            }
        }
    }
}

